# imageVersion -- The image version used for the operator.
imageVersion: latest
# terraformBinary -- Information about the `terraform` binary to inject into the main container. These values will be used to download the binary from `https://releases.hashicorp.com/terraform/<terraformVersion.version>/terraform_<terraformVersion.version>_<terraformVersion.operatingSystem>_<terraformVersion.arch>.zip`.
terraformBinary:
  # terraformBinary.initContainerImage -- The image to use for the init container that installs the target `terraform` binary.
  initContainerImage: alpine:3.15.0
  # terraformBinary.version -- The version of the `terraform` binary. Note that it's not possible to use `latest`, or use "partial" versions (e.g. `1`, or `1.1`) so you have to specify the full version.
  version: 1.1.2
  # terraformBinary.operatingSystem -- The operating system for which to download the `terraform` binary.
  operatingSystem: linux
  # terraformBinary.arch -- The architecture for which to download the `terraform` binary.
  arch: amd64
# imagePullPolicy -- The imagePullPolicy to be used on the operator.
imagePullPolicy: IfNotPresent
# watchNamespace -- The value to be set on the `WATCH_NAMESPACE` environment variable.
watchNamespace: ""
# defaultConfiguration -- The values to be used for the default `vault-dynamic-configuration` `ConfigMap`.
prometheusMonitoring:
  # prometheusMonitoring.enable -- Create the `Service` and `ServiceMonitor` objects to enable Prometheus monitoring on the operator.
  enable: false
  serviceMonitor:
    # prometheusMonitoring.serviceMonitor.customLabels -- Custom labels to add to the ServiceMonitor object.
    customLabels:
# authEnvVars -- Environment variables required for remote state backend authentication. This is a slice of [`v1.EnvVar`](https://pkg.go.dev/k8s.io/api/core/v1#EnvVar)s.
authEnvVars:
# resources -- (object) The resources requests/limits to be set on the deployment pod spec template.
resources:
rbac:
  # rbac.clusterRoleSecretsAccessRules -- List of `PolicyRule`s for accessing Kubernetes secrets, to be appended to the `amphibian-manager-role` cluster role.
  clusterRoleSecretsAccessRules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
# volumes: -- List of [`v1.Volume`](https://pkg.go.dev/k8s.io/api/core/v1#Volume) objects to be appended as-is to the amphibian workloads.
volumes:
# volumeMounts -- List of [`v1.VolumeMount`](https://pkg.go.dev/k8s.io/api/core/v1#VolumeMount) objects to be appended as-is to the amphibian workloads
volumeMounts: